<project name="INLOOP example checker" default="fail" basedir=".">

  <path id="lib.thirdparty">
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <property name="build.dir" value="/checker/scratch/build"/>
  <property name="checker.input" value="/checker/input"/>
  <property name="checker.output" value="/checker/output/storage"/>
  <property name="spotbugs.home" value="/export/home/daveho/work/spotbugs"/>


  <target name="compile">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}" debug="true" includeantruntime="false">
      <src path="${checker.input}"/>
      <src path="${current_task}/tests"/>
      <include name="**/*.java"/>
      <classpath refid="lib.thirdparty"/>
      <compilerarg value="-Xlint"/>
    </javac>
  </target>

  <target name="spotbugs">
    <taskdef resource="edu/umd/cs/findbugs/anttask/tasks.properties"
             classpath="lib/spotbugs-3.1.1/lib/spotbugs-ant.jar"/>
    <spotbugs home="${spotbugs.home}" output="xml" outputFile="${checker.output}/spotbugs_errors.xml">
      <sourcePath path="${checker.input}"/>
    </spotbugs>
  </target>

  <target name="checkstyle">
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
             classpath="lib/checkstyle-8.9-all.jar"/>
    <checkstyle config="lib/checkstyle.xml" failOnViolation="false">
      <fileset dir="${checker.input}" includes="**/*.java"/>
      <formatter type="xml" toFile="${checker.output}/checkstyle_errors.xml"/>
    </checkstyle>
  </target>

  <target name="pmd">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
    <pmd shortFilenames="true">
      <ruleset>lib/pmd-ruleset.xml</ruleset>
      <formatter type="xml" toFile="${checker.output}/pmd_errors.xml"/>
      <fileset dir="${checker.input}" includes="**/*.java"/>
    </pmd>
  </target>

  <target name="test" depends="compile, checkstyle, pmd, spotbugs">
    <junit fork="true" forkmode="once" haltonfailure="true"
           printsummary="true" tempdir="${build.dir}">
      <classpath>
        <path refid="lib.thirdparty"/>
        <pathelement path="${build.dir}"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${checker.output}">
        <fileset dir="${current_task}/tests">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="fibonacci">
    <antcall target="test">
      <param name="current_task" value="fibonacci"/>
    </antcall>
  </target>

  <target name="fail">
    <fail message="Must specify a target."/>
  </target>
</project>
